   processor 6502

// routine del kernal
const GETIN  = $FFE4
const CHROUT = $FFD2

// porte del modem virtuale
dim MODEM_DATA_OUT    as byte at $D7F2    ; caratteri da inviare
dim MODEM_DATA_IN     as byte at $D7F0    ; caratteri in arrivo
dim MODEM_DATA_REQ    as byte at $D7F3    ; 1 se ci sono caratteri in arrivo nel buffer
dim MODEM_ACK         as byte at $D7F1    ; porta per l'handshake
dim MODEM_CONNST      as byte at $D7F4    ; status del modem (0=connesso, <>0 disconnesso)

    org 2049

basic start compact
   2020 sys {main}
basic end

main:
    lda #0   : sta 53280 : sta 53281 ; black screen
    lda #15  : sta 54296     ; max volume
    lda #14  : jsr CHROUT    ; lowercase
    lda #147 : jsr CHROUT    ; clr
    lda #5   : jsr CHROUT    ; white

    lda #0   : sta MODEM_DATA_OUT   ; force connection with BBS

terminal:
    ; controlla se ci sono caratteri da stampare nel buffer
    lda MODEM_DATA_REQ
    if a<>#0 then
        jsr cursor_off
        do
            ; esci da modalità QUOTE e INS
            ldx #0
            stx $D4
            stx $D8

            ; legge il carattere dal modem
            lda MODEM_DATA_IN

            ; se è CHR$(7) emette il suono della campana
            if a==#7 then jsr term_bell

            ; stampa il carattere a video
            jsr CHROUT

            ; notifica al modem che il carattere è stato ricevuto
            ; TODO riscrivere unsando il pin SYNC della CPU
            lda #0
            sta MODEM_ACK
            lda #1
            sta MODEM_ACK

            ; controlla se ci sono altri caratteri da stampare nel buffer
            lda MODEM_DATA_REQ
        loop while not zero
        jsr cursor_on
    end if

    ; legge un carattere da tastiera e lo manda al modem
    jsr GETIN
    if a<>#0 then sta MODEM_DATA_OUT

    ; aggiorna il colore dello schermo con lo status del modem (nero/rosso)
    lda MODEM_CONNST
    sta 53280
    sta 53281

    jmp terminal

; cursor on/off, term_bell (C) Francesco Sblendorio
; https://github.com/sblendorio/ultimateii-dos-lib/blob/master/src/samples/screen_utility.c

cursor_on:
    ldy #$00
    sty $cc
    rts

cursor_off:
    ldy $cc
    if zero then
        ldy #$01
        sty $cd
        do
            ldy $cf
        loop while not zero
    end if
    ldy #$ff
    sty $cc
    rts

term_bell:
    ldy #15  : sty $D418
    ldy #20  : sty $D401
    ldy #0   : sty $D405
    ldy #249 : sty $D406
    ldy #17  : sty $D404
    ldy #16  : sty $D404
    rts
