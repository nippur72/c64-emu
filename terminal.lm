   processor 6502

include <macros.lm>
include <macros_16.lm>
include <c64.lm>

// rom kernal entries
const GETIN  = $FFE4
const CHROUT = $FFD2

    org BASIC_RAM

// porte del modem virtuale
dim MODEM_DATA_OUT    as byte at $D7F2    ; caratteri da inviare
dim MODEM_DATA_IN     as byte at $D7F0    ; caratteri in arrivo
dim MODEM_DATA_REQ    as byte at $D7F3    ; 1 se ci sono caratteri in arrivo nel buffer
dim MODEM_ACK         as byte at $D7F1    ; porta per l'handshake
dim MODEM_CONNST      as byte at $D7F4    ; status del modem (0=connesso, <>0 disconnesso)

basic start
   2020 sys {main}
basic end

main:
    ld 53280, #0             ; black border
    ld 53281, #0             ; black screen
    ld 54296, #15            ; max volume
    lda #14  : jsr CHROUT    ; lowercase
    lda #147 : jsr CHROUT    ; clr
    lda #5   : jsr CHROUT    ; white

terminal:
    ; controlla se ci sono caratteri da stampare nel buffer
    lda MODEM_DATA_REQ
    if a<>#0 then
        jsr cursor_off
        do
            ; esci da modalità QUOTE e INS
            ldx #0
            stx $D4
            stx $D8

            ; legge il carattere dal modem
            lda MODEM_DATA_IN

            ; se è CHR$(7) emette il suono della campana
            pha
            if a==#7 then jsr term_bell
            pla

            ; stampa il carattere a video
            jsr CHROUT

            ; notifica al modem che il carattere è stato ricevuto
            lda #0
            sta MODEM_ACK
            lda #1
            sta MODEM_ACK

            ; controlla se ci sono altri caratteri da stampare nel buffer
            lda MODEM_DATA_REQ
        loop while not zero
        jsr cursor_on
    end if

    ; legge un carattere da tastiera e lo manda al modem
    jsr GETIN
    if a<>#0 then sta MODEM_DATA_OUT

    ; aggiorna il colore dello schermo con lo status del modem (nero/rosso)
    lda MODEM_CONNST
    sta 53280
    sta 53281

    jmp terminal

; cursor on/off, term_bell (C) Francesco Sblendorio
; https://github.com/sblendorio/ultimateii-dos-lib/blob/master/src/samples/screen_utility.c

cursor_on:
    ldy #$00
	sty $cc
    rts

cursor_off:
	ldy $cc
	if zero then
        ldy #$01
        sty $cd
        do
            ldy $cf
        loop while not zero
    end if
	ldy #$ff
	sty $cc
    rts

term_bell:
	ld $D418, #15
	ld $D401, #20
	ld $D405, #0
	ld $D406, #249
	ld $D404, #17
	ld $D404, #16
	rts
